version: 2

jobs:

  tests:
    docker:
      - image: circleci/node:10.8.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}
      - run:
          name: Run tests
          command: npm t

  package:
    context: global
    docker:
      - image: circleci/node:10.8.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}
      - run:
          name: Create packages
          command: npm run package
      - run:
          name: Save current version number
          command: |
            CURRENT_VERSION=$(npm show dat-cp version)
            echo $CURRENT_VERSION
      - run:
          name: Save new version number
          command: |
            NEW_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g')
            echo $NEW_VERSION
      - persist_to_workspace:
          root: .
          paths:
            - dist

  publish-github-release:
    context: global
    docker:
      - image: circleci/golang:1.8
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ./workspace
      - run:
          name: "Publish Release on GitHub"
          command: |
            echo "curr=$CURRENT_VERSION, new=$NEW_VERSION"

            if [ "$CURRENT_VERSION" = "$NEW_VERSION" ]; then
              echo "Not a new release, exiting"
              exit
            fi

            go get github.com/tcnksm/ghr

            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${NEW_VERSION} ./workspace/dist/

workflows:
  version: 2
  cicd-workflow:
    jobs:
      - tests
      - package:
          requires:
            - tests
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
      - publish-github-release:
          requires:
            - package
